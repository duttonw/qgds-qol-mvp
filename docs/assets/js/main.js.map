{
  "version": 3,
  "sources": ["../../../src/components/bs5/accordion/accordion.functions.js", "../../../src/main.js"],
  "sourcesContent": ["/**\n * Toggle all accordion elements\n *\n * @memberof module:Accordion\n *\n * @param  {Object}  event - The event that triggered this function.\n * @returns {void}\n */\nexport function accordionToggleAll(event) {\n  // stop event propagation\n  try {\n    window.event.cancelBubble = true;\n    event.stopPropagation();\n  } catch (error) {\n    //error message\n  }\n\n  let toggleAllButton = event.target;\n  // find the accordion wrapper\n  let wrapper = toggleAllButton.closest(\".accordion-group\");\n  // get all the accordion buttons\n  let accordionButtons = wrapper.querySelectorAll(\".accordion-button\");\n\n  // Check if opened or closed\n  if (toggleAllButton.classList.contains(\"accordion-toggle-btn--closed\")) {\n    toggleAllButton.classList.remove(\"accordion-toggle-btn--closed\");\n    toggleAllButton.classList.add(\"accordion-toggle-btn--open\");\n    toggleAllButton.textContent = \"Close all\";\n    accordionButtons.forEach((button) => {\n      if (button.matches(\".collapsed\")) button.click();\n    });\n  } else if (toggleAllButton.classList.contains(\"accordion-toggle-btn--open\")) {\n    toggleAllButton.classList.remove(\"accordion-toggle-btn--open\");\n    toggleAllButton.classList.add(\"accordion-toggle-btn--closed\");\n    toggleAllButton.textContent = \"Open all\";\n    accordionButtons.forEach((button) => {\n      if (button.matches(\":not(.collapsed)\")) button.click();\n    });\n  }\n}\n\n/**\n * Updates toggle all button if all panels are open/closed individually.\n *\n * @memberof module:Accordion\n *\n * @param {Object} event - The event that triggered this function.\n * @returns {void}\n */\nexport function accordionToggleAllButtonState(event) {\n  // stop event propagation\n  try {\n    window.event.cancelBubble = true;\n    event.stopPropagation();\n  } catch (error) {\n    //error message\n  }\n\n  let accordionGroup = event.target.closest(\".accordion-group\"),\n    toggleAllButton = accordionGroup.querySelector(\".accordion-toggle-btn\");\n\n  if (\n    toggleAllButton.classList.contains(\"accordion-toggle-btn--closed\") &&\n    accordionGroup.querySelectorAll(\".accordion-button.collapsed\").length == 0\n  ) {\n    toggleAllButton.classList.remove(\"accordion-toggle-btn--closed\");\n    toggleAllButton.classList.add(\"accordion-toggle-btn--open\");\n    toggleAllButton.textContent = \"Close all\";\n  } else if (\n    toggleAllButton.classList.contains(\"accordion-toggle-btn--open\") &&\n    accordionGroup.querySelectorAll(\".accordion-button.collapsed\").length > 0\n  ) {\n    toggleAllButton.classList.remove(\"accordion-toggle-btn--open\");\n    toggleAllButton.classList.add(\"accordion-toggle-btn--closed\");\n    toggleAllButton.textContent = \"Open all\";\n  }\n}\n", "import {\n  accordionToggleAll,\n  accordionToggleAllButtonState,\n} from \"./components/bs5/accordion/accordion.functions\";\n\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n  (() => {\n    let accordionToggleButton = document.querySelectorAll(\".accordion-toggle-btn\");\n\n    accordionToggleButton.forEach(function (toggleButton) {\n      toggleButton.addEventListener(\"click\", accordionToggleAll);\n\n      let accordionButtons = toggleButton\n        .closest(\".accordion-group\")\n        .querySelectorAll(\".accordion-button\");\n\n      accordionButtons.forEach(function (button) {\n        button.addEventListener(\"click\", accordionToggleAllButtonState);\n      });\n    });\n\n  })();\n});\n"],
  "mappings": "mBAQO,SAASA,EAAmBC,EAAO,CAExC,GAAI,CACF,OAAO,MAAM,aAAe,GAC5BA,EAAM,gBAAgB,CACxB,OAASC,EAAO,CAEhB,CAEA,IAAIC,EAAkBF,EAAM,OAIxBG,EAFUD,EAAgB,QAAQ,kBAAkB,EAEzB,iBAAiB,mBAAmB,EAG/DA,EAAgB,UAAU,SAAS,8BAA8B,GACnEA,EAAgB,UAAU,OAAO,8BAA8B,EAC/DA,EAAgB,UAAU,IAAI,4BAA4B,EAC1DA,EAAgB,YAAc,YAC9BC,EAAiB,QAASC,GAAW,CAC/BA,EAAO,QAAQ,YAAY,GAAGA,EAAO,MAAM,CACjD,CAAC,GACQF,EAAgB,UAAU,SAAS,4BAA4B,IACxEA,EAAgB,UAAU,OAAO,4BAA4B,EAC7DA,EAAgB,UAAU,IAAI,8BAA8B,EAC5DA,EAAgB,YAAc,WAC9BC,EAAiB,QAASC,GAAW,CAC/BA,EAAO,QAAQ,kBAAkB,GAAGA,EAAO,MAAM,CACvD,CAAC,EAEL,CAUO,SAASC,EAA8BL,EAAO,CAEnD,GAAI,CACF,OAAO,MAAM,aAAe,GAC5BA,EAAM,gBAAgB,CACxB,OAASC,EAAO,CAEhB,CAEA,IAAIK,EAAiBN,EAAM,OAAO,QAAQ,kBAAkB,EAC1DE,EAAkBI,EAAe,cAAc,uBAAuB,EAGtEJ,EAAgB,UAAU,SAAS,8BAA8B,GACjEI,EAAe,iBAAiB,6BAA6B,EAAE,QAAU,GAEzEJ,EAAgB,UAAU,OAAO,8BAA8B,EAC/DA,EAAgB,UAAU,IAAI,4BAA4B,EAC1DA,EAAgB,YAAc,aAE9BA,EAAgB,UAAU,SAAS,4BAA4B,GAC/DI,EAAe,iBAAiB,6BAA6B,EAAE,OAAS,IAExEJ,EAAgB,UAAU,OAAO,4BAA4B,EAC7DA,EAAgB,UAAU,IAAI,8BAA8B,EAC5DA,EAAgB,YAAc,WAElC,CCvEA,OAAO,iBAAiB,mBAAoB,IAAM,CAElB,SAAS,iBAAiB,uBAAuB,EAEvD,QAAQ,SAAUK,EAAc,CACpDA,EAAa,iBAAiB,QAASC,CAAkB,EAElCD,EACpB,QAAQ,kBAAkB,EAC1B,iBAAiB,mBAAmB,EAEtB,QAAQ,SAAUE,EAAQ,CACzCA,EAAO,iBAAiB,QAASC,CAA6B,CAChE,CAAC,CACH,CAAC,CAGL,CAAC",
  "names": ["accordionToggleAll", "event", "error", "toggleAllButton", "accordionButtons", "button", "accordionToggleAllButtonState", "accordionGroup", "toggleButton", "accordionToggleAll", "button", "accordionToggleAllButtonState"]
}
